#https://gist.github.com/fumin/7456722
#https://serversforhackers.com/load-balancing-with-haproxy
#https://askubuntu.com/questions/49196/how-do-i-create-a-self-signed-ssl-certificate
#https://stackoverflow.com/questions/27947982/haproxy-unable-to-load-ssl-private-key-from-pem-file
#https://www.digitalocean.com/community/tutorials/how-to-use-haproxy-to-set-up-http-load-balancing-on-an-ubuntu-vps
#https://serverfault.com/questions/239749/possible-to-add-basic-http-access-authentication-via-haproxy
#http://johntdyer.com/haproxy/2015/03/05/dynamic-access-control-allow-origin-header-in-haproxy.html


userlist elastic_users
	user ${ELASTIC_USERNAME} insecure-password ${ELASTIC_PASSWORD}

#eff it, using root user to get access to snakeoil key
global
    log 127.0.0.1 local0 notice
    maxconn 1000
    user root
    group root

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    retries 5
    option redispatch
    timeout connect 20000
    timeout client  20000
    timeout server  20000

frontend elasticsearch_frontend
	log global
	option httplog
	bind :9400 ssl crt ${LOCATION}/server.pem
	mode http

	capture request header origin len 128
    http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
    rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }

	acl elastic http_auth(elastic_users)

	http-request auth if !elastic

	use_backend elastic_backend if elastic

backend elastic_backend
	mode http
	server elasticsearch_server 192.168.2.10:9200


frontend kibana_frontend
	log global
	option httplog
	bind :5602 ssl crt ${LOCATION}/server.pem
	mode http

	capture request header origin len 128
    http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
    rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }


	acl elastic http_auth(elastic_users)

	http-request auth if !elastic

	use_backend kibana_backend if elastic

backend kibana_backend
	mode http
	server kibana_server 192.168.2.10:5601